@page "/checkin"
@inject HttpClient Http
@inject NavigationManager Navigation

@if (isLoading)
{
    <h1>Check-In gestartet ...</h1>
}

@if (!isLoading && statusCode == 200)
{
    <h1>Du bist für heute eingecheckt!</h1>
}

@if(!isLoading && statusCode != 200)
{
        <h1>Fehler beim Einchecken!</h1>
        <h3>@statusCode: @message</h3>
}

@code {
    public string? Id { get; set; }

    private bool isLoading = true;
    private int? statusCode;
    private string? message;

    protected override async Task OnInitializedAsync()
    {
        isLoading = true;

        var uri = Navigation.ToAbsoluteUri(Navigation.Uri);
        var query = System.Web.HttpUtility.ParseQueryString(uri.Query);
        Id = query["id"];

        try
        {
            var url = @"https://uhehdnebxlsebroseiwzf4svnm0wffxe.lambda-url.eu-central-1.on.aws?id=" + Id;
            var response = await Http.GetAsync(url);
            statusCode = (int)response.StatusCode;
            message = await response.Content.ReadAsStringAsync();
        }
        catch (Exception ex)
        {
            statusCode = 500;
        }
        finally
        {
            isLoading = false;
        }
    }
}
